#!/usr/bin/env -S just --justfile

set dotenv-load := true

alias d := dev
alias f := fmt
alias l := lint
alias p := publish

# List available commands.
_default:
    just --list --unsorted

# Setup the repository.
setup: _setup-dev

# Setup the development tools.
_setup-dev:
    just _cargo-install ' cargo-watch  cargo-outdated spacer'

# Develop the app.
dev:
    cargo watch -x 'clippy --locked --all-targets --all-features' | spacer

# Format the codebase.
fmt:
    cargo fmt --all

# Check is the codebase properly formatted.
fmt-check:
    cargo fmt --all -- --check

# Lint the codebase.
lint:
    cargo clippy --locked --all-targets --all-features

# Check the documentation.
_doc-check:
    cargo doc --all-features --no-deps

# Link the binaries
publish:
    cargo test

# Tasks to make the code-base comply with the rules. Mostly used in git hooks.
comply: fmt lint _doc-check

# Check if the repository comply with the rules and ready to be pushed.
check: fmt-check lint _doc-check

# Check dependencies health. Pass `--write` to uppgrade dependencies.
[unix]
up arg="":
    #!/usr/bin/env bash
    if [ "{{ arg }}" = "--write" ]; then
        cargo upgrade
        cargo update
    else
        cargo outdated --root-deps-only
    fi;

#
# Helper
#

[unix]
_cargo-install tool:
    #!/usr/bin/env bash
    if command -v cargo-binstall >/dev/null 2>&1; then
        echo "cargo-binstall..."
        cargo binstall --no-confirm --no-symlinks {{ tool }}
    else
        echo "Building from source"
        cargo install --locked {{ tool }}
    fi
