#!/bin/sh

wezterm_link="https://github.com/wez/wezterm/releases/download/20211204-082213-a66c61ee9/wezterm-20211204-082213-a66c61ee.Debian11.deb"
activitywatch_link="https://github.com/ActivityWatch/activitywatch/releases/download/v0.11.0/activitywatch-v0.11.0-linux-x86_64.zip"
nextcloud_link="https://github.com/nextcloud/desktop/releases/download/v3.3.5/Nextcloud-3.3.5-x86_64.AppImage"
insomnia_link="https://github.com/Kong/insomnia/releases/download/core%402021.5.3/Insomnia.Core-2021.5.3.AppImage"
aspell_link="https://ftp.gnu.org/gnu/aspell/dict/id/aspell5-id-1.2-0.tar.bz2"
firefox_link="https://download-installer.cdn.mozilla.net/pub/firefox/releases/92.0.1/linux-x86_64/en-US/firefox-92.0.1.tar.bz2"
telegram_link="https://updates.tdesktop.com/tlinux/tsetup.3.1.1.tar.xz"
greenclip_link="https://github.com/erebe/greenclip/releases/download/v4.2/greenclip"

wallpapers_link="https://www.dropbox.com/s/o5gvczc3ymgg8vv/wallpapers.tar.gz?dl=0"
sounds_link="https://www.dropbox.com/s/whao1ljkd26n3nw/sounds.tar.gz?dl=0"
fonts_link="https://www.dropbox.com/s/jp7s95ihd48edar/fonts.tar.gz?dl=0"
icons_link="https://www.dropbox.com/s/4wn1fczsx050gvl/.icons.tar.gz?dl=0"
icon_apps_link="https://www.dropbox.com/s/l7q1uhgempo7g6a/icon-apps.zip?dl=0"

firefox_desktop="https://www.dropbox.com/s/207r2bstxf82on1/firefox.desktop?dl=0"
insomnia_desktop="https://www.dropbox.com/s/em9frkyxoq91ffb/insomnia.desktop?dl=0"

node_version="v16.12"

# Add repository
echo "deb http://ftp.au.debian.org/debian/ bullseye main contrib non-free" | sudo tee --append /etc/apt/sources.list
echo "deb-src http://ftp.au.debian.org/debian/ bullseye main contrib non-free" | sudo tee --append /etc/apt/sources.list

# Keep Debian up to date
sudo apt --yes update

#
# Main package
#

# fuse required by AppImage
# libssl-dev provides certificates for culr
# libdbus-1-dev and pkg-config required by i3status-rust and other apps, such as mousepad
# audio won't work without pulseaudio
# without `gstreamer1.0-pulseaudio` apps can't play sound (such workrave can't play .wav notification sound)
# `alsa-utils` provide amixer command. It is easier to use than built-in pactl
sudo apt-get install --yes --no-install-recommends \
     xserver-xorg xinit libdbus-1-dev pkg-config \
     sudo firmware-iwlwifi x11-xserver-utils libssl-dev \
     pavucontrol pulseaudio gstreamer1.0-pulseaudio alsa-utils\
     blueman bluez pulseaudio-module-bluetooth \
     fish fuse git etckeeper gnupg2 ssh ssh-agent curl stow rsync \
     gnome-keyring

#
# Utilities
#

# xclip required by pass to copy to clipboard
# gvfs-fuse gvfs-backends adds support for sftp in thunar
sudo apt-get install --yes --no-install-recommends \
     bspwm sxhkd polybar picom autorandr arandr i3lock rofi light dunst unclutter \
     pass light xclip network-manager-gnome \
     flameshot feh ristretto peek file-roller mousepad workrave \
     thunar thunar-archive-plugin gvfs-fuse gvfs-backends \
     htop tar zip unzip unar unrar-free ncdu mat2 borgbackup gparted \
     mpv gimp inkscape libreoffice libreoffice-gtk3 audacity \
     okular okular-extra-backends evince system-config-printer \
     aspell aspell-en \
     zoxide ripgrep fd-find arc-theme \
     markdown telnet

#
# Family
#

# This machines is shared among family members
# It is hard for them to memorize bunch of window manager keybindings
sudo apt-get install --yes --no-install-recommends \
     lightdm xfce4 xfce4-battery-plugin

#
# Additional packages
#

sudo apt-get install --yes --no-install-recommends \
     docker.io docker-compose
sudo usermod -aG docker "$USER"
su - "$USER"

#
# Keyboards
#

python3 -m pip install --user qmk
sudo apt-get install --yes --no-install-recommends libhidapi-dev
# qmk setup -H /media/$USER/exts1/source/qmk_firmware
# qmk config user.keyboard=sofle/rev1 user.keymap=$USER user.name=$USER

#
# Screen
#

# - Prepare the desired screen layout using arandr
# - Save the layout using `autorandr --save docked`
# - The common layouts are: `docked`, `mobile`, and `demo`
# - To load the layout use `autorandr --load demo`
# Docked for work, mobile while on the go, demo for presentation

#
# Bluetooth
#

# Start the GUI manager using `bluetooth` in rofi drun
# Then manage using PavuControl GUI.
sudo modprobe btusb
sudo systemctl enable bluetooth.service
sudo systemctl start bluetooth.service

#
# Shell
#

# fish
chsh -s "$(which fish)" # change default shell to fish

# Bash
sudo apt-get install --yes --no-install-recommends \
     shellcheck

#
# Work
#

curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

sudo apt-get install --yes --no-install-recommends \
     python3 python3-dev python3-venv python3-pip python3-setuptools

cargo install vivid fnm
fnm use $node_version

# Starship
sh -c "$(curl -fsSL https://starship.rs/install.sh)"

# Js
# Fixed version global packages
mkdir nodebin && cd nodebin && npm init --yes
npm install --prefix "$HOME"/nodebin/ typescript-language-server svelte-language-server bash-language-server
npm install --prefix "$HOME"/nodebin/ prettier parcel
mv nodebin/ .nodebin

# Rust
# cargo install cargo-make

# Python
# these app need to be installed inside the project's venv
# pip install python-language-server pyls-black pyls-isort pyls-mypy
# pip install black mypy pylint ipdb

# `grip` is handy tool to render md file locally
pip install --user grip

pip install --user virtualfish
vf install
vf new --python python3 global

#
# Setup
#

echo "Installed base app. I will setup them for you."

# auto-suspend
git clone --depth=1 https://github.com/azzamsa/scripts/ /tmp/scripts
sudo mv /tmp/scripts/auto-suspend/ /opt/
sudo chown -R "$USER:$USER" /opt/auto-suspend
sudo ln --symbolic /opt/auto-suspend/auto-suspend /usr/local/bin/auto-suspend

# Wezterm
curl --location $wezterm_link --output /tmp/wezterm
sudo dpkg --install /tmp/wezterm

# aw-qt
curl --location $activitywatch_link --output /tmp/activitywatch.zip
unzip /tmp/activitywatch.zip
sudo mv /tmp/activitywatch /opt/
sudo chown --recursive "$USER:$USER" /opt/activitywatch
sudo ln --symbolic /opt/activitywatch/aw-qt /usr/local/bin/aw-qt

# Nextcloud
curl --location  $nextcloud_link --output /tmp/nextcloud
chmod +x /tmp/nextcloud
sudo mv /tmp/nextcloud /opt/
sudo chown --recursive "$USER:$USER" /opt/nextcloud
sudo ln --symbolic /opt/nextcloud /usr/local/bin/nextcloud

# Insomnia
curl --location $insomnia_link --output /tmp/insomnia
chmod +x /tmp/insomnia
mv /tmp/insomnia /opt/
sudo chown --recursive "$USER:$USER" /opt/insomnia
sudo ln --symbolic /opt/insomnia /usr/local/bin/insomnia

# Additional aspell dictionaries
curl --location $aspell_link --output /tmp/aspell5-id.tar.bz2
tar --file /tmp/aspell5-id.tar.bz2 --extract
./tmp/aspell5-id-1.2-0/configure
sudo make --directory /tmp/aspell5-id-1.2-0/ install

## Firefox
curl --location $firefox_link --output /tmp/firefox.tar.bz2
tar --file /tmp/firefox.tar.bz2 --extract
sudo mv /tmp/firefox/ /opt/
sudo chown --recursive "$USER:$USER" /opt/firefox
sudo ln --symbolic /opt/firefox/firefox /usr/local/bin/firefox

## Telegram
curl --location  $telegram_link --output /tmp/tsetup.tar.xz
tar --file /tmp/tsetup.tar.xz --extract
sudo mv /tmp/Telegram/ /opt/
sudo chown --recursive "$USER:$USER" /opt/Telegram
sudo ln --symbolic /opt/Telegram/Telegram /usr/local/bin/Telegram

## greenclip
curl --location $greenclip_link --output /tmp/greenclip
chmod +x /tmp/greenclip
sudo mv /tmp/greenclip /opt/
sudo ln --symbolic /opt/greenclip /usr/local/bin/greenclip

## pass-otp
git clone https://github.com/tadfisher/pass-otp /tmp/pass-otp
sudo make --directory /tmp/pass-otp install

# wallpaper, sounds, fonts, and icons
mkdir ~/sounds ~/wallpapers

curl --location "$wallpapers_link" --output ~/wallpapers/wallpapers.tar.gz
tar --file ~/wallpapers/wallpapers.tar.gz --extract
rm ~/wallpapers/wallpapers.tar.gz

curl --location "$sounds_link" --output ~/sounds/sounds.tar.gz
tar --file ~/sounds/sounds.tar.gz --extract
rm ~/sounds/sounds.tar.gz

# Fonts
mkdir --parents ~/.local/share/fonts
curl --location "$fonts_link" --output ~/.local/share/fonts/fonts.tar.gz
tar --file ~/.local/share/fonts/fonts.tar.gz --extract
rm ~/.local/share/fonts/fonts.tar.gz
# -f force, -v verbose
fc-cache -fv

# Icons
mkdir ~/.icons
curl --location~/.icons/.icons.tar.gz "$icons_link"
tar --file ~/.icons/.icons.tar.gz --extract
rm ~/.icons/.icons.tar.gz

# Global icons
sudo mkdir --parents /usr/share/icons/apps/
sudo chown --recursive "$USER:$USER" /usr/share/icons/apps
curl --location "$icon_apps_link" --output /usr/share/icons/apps/icons.tar.gz
tar --file /usr/share/icons/apps/icons.tar.gz --extract
rm /usr/share/icons/apps/icons.tar.gz

# Emacs
sudo apt-get build-dep emacs
inn libgccjit-10-dev
# ./autogen.sh
# ./configure --with-native-compilation --with-pgtk
# make or # make -j$(nproc)
# sudo make install

# Dotfiles
git clone https://github.com/azzamsa/dotfiles ~/dotfiles/
for d in ~/dotfiles/*/ ; do
    stow "$d" --no-folding
done

# mu4e
# mu init --maildir=~/Email/secret --my-address=secret

# Dual-monitor
# Keep the laptot alive even if no HDMI connection
echo "
HandleSuspendKey=ignore
HandleLidSwitch=ignore
HandleLidSwitchDocked=ignore
"  | sudo tee --append /etc/systemd/logind.conf

# Disable pc speaker
echo "blacklist pcspkr" | sudo tee --append /etc/modprobe.d/nobeep.conf

# .desktop files
mkdir --parents ~/.local/share/applications
curl --location "$firefox_desktop" --output ~/.local/share/applications/firefox.desktop
curl --location "$insomnia_desktop" --output ~/.local/share/applications/insomnia.desktop

# Python

# Set default python to python3
# in Debian, it points to python2
sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10

# Display manager

# This setup needs to be in the last step, because it depends on wallpapers to be setting up before hand.
sudo mv /etc/lightdm/lightdm-gtk-greeter.conf /etc/lightdm/lightdm-gtk-greeter.conf.bak

# Use lockscreen as LightDM background
sudo mkdir --parents /usr/share/backgrounds/
sudo cp ~/wallpapers/lockscreen.png /usr/share/backgrounds/lockscreen.png

echo "
[greeter]
background = /usr/share/backgrounds/lockscreen.png
theme-name = Arc
icon-theme-name = Papirus-Light
font-name = Victor Mono
xft-antialias = true
xft-hintstyle = hintslight
xft-rgba = rgb
"  | sudo tee --append /etc/lightdm/lightdm-gtk-greeter.conf

# Set bspwm as default session in X
sudo update-alternatives --install /usr/bin/x-session-manager x-session-manager /usr/bin/bspwm 60

# set LightDM as default display manager
sudo dpkg-reconfigure lightdm

echo "Setup finished"
cat <<- EOF
Your next TODO:
  1. change BIOS setting for beep
  2. copy .authinfo.gpg and Email
  3. build emacs
EOF
