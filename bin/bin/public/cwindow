#!/bin/python
# -*- coding: utf-8 -*-

"""
Clean Window (cwindow)
~~~~~~~~~~~~~~~~~~~~~
It is a simple script that fetch the window title and strip all the creditials. Such username and hosname.

The code is extracted from my project Lupr: https://github.com/azzamsa/lupr
It is very usable when doing screenshot or streaming videos.

Usage with Polybar:

.. code-block:: yml
   [module/cwindow]

   interval = 1
   format = <label>
   exec = "cwindow"

"""
import re
from subprocess import Popen, PIPE


def _handle_various_xprop(active_window):
    """Handle various xprop formats."""
    active_window_str = active_window
    if type(active_window) is bytes:
        active_window_str = active_window.decode()

    window_id = active_window_str.split()[-1]
    # handle XFCE xprop format
    if window_id == "0x0":
        window_id = active_window_str.split()[-2].strip(",")

    return window_id


def get_focused_window_id():
    """Return focused windows id."""
    active_window_proc = Popen(["xprop", "-root", "_NET_ACTIVE_WINDOW"], stdout=PIPE)
    active_window, err = active_window_proc.communicate()
    focused_window_id = _handle_various_xprop(active_window)
    return focused_window_id


def get_focused_window_title():
    """Get current focused window title.
    window_name_dirty value is  b\'WM_NAME(STRING) = "WINDOW TITLE"\n'.
    WINDOW TITLE will be parsed using regex and returned as string.
    new line at the end of file needed as it's git convention.
    """
    focused_window_id = get_focused_window_id()
    window_name_proc = Popen(
        ["xprop", "-id", focused_window_id, "WM_NAME"], stdout=PIPE
    )
    window_name_dirty, err = window_name_proc.communicate()
    focused_window = re.findall(r"\"(.+?)\"", window_name_dirty.decode())
    return "{}\n".format("".join(focused_window))


def get_clean_window_title():
    clean_title = ""

    raw_title = get_focused_window_title()
    # Handle hosname at GNU Emacs
    # The output should looks like: `window_title - GNU Emacs at machine`
    if "GNU Emacs at" in raw_title:
        window_title = raw_title.split("-")[0].strip()
        clean_title = f"{window_title} - GNU Emacs"
    else:
        clean_title = raw_title

    return clean_title


print(get_clean_window_title())
