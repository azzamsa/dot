[colors]
background = #eceff4
background-alt = #d8dee9
foreground =  #4c566a
foreground-alt = #5e81ac
accent = #88c0d0
alert = #ebcb8b

[bar/bar1]
monitor = ${env:MONITOR:HDMI-1}
height = 27
width = 99.5%
offset-y = 0.5%
offset-x = 0.3%
fixed-center = true

background = ${colors.background}
foreground = ${colors.foreground}

padding-left = 1
padding-right = 1
module-margin-left = 1
module-margin-right = 1

font-0 = "Fira Code SemiBold:pixelsize=10"

# fc-list | grep -i "Awesome 6"
font-1 = "Font Awesome 6 Free Regular:pixelsize=10"
font-2 = "Font Awesome 6 Free Solid:pixelsize=10"
font-3 = "Font Awesome 6 Free Brands Regular:pixelsize=10"

# fc-list | grep -i "Awesome 5"
font-4 = "Font Awesome 5 Free Regular:pixelsize=10"
font-5 = "Font Awesome 5 Free Solid:pixelsize=10"
font-6 = "Font Awesome 5 Brands Regular:pixelsize=10"

tray-position = right
tray-padding = 1
tray-background = ${colors.background}

wm-restack = bspwm
modules-left = bspwm
modules-center = cwindow
modules-right =  cpu memory battery date

cursor-click = pointer
cursor-scroll = ns-resize
enable-ipc = true

[module/bspwm]
type = internal/bspwm
pin-workspaces = true

label-focused = %name%
label-focused-background= ${colors.accent}
label-focused-padding = 1
label-occupied = %name%
label-occupied-padding = 1
label-occupied-foreground= ${colors.foreground}
label-urgent = %name%
label-urgent-background = ${colors.alert}
label-urgent-padding = 1
label-empty =
label-empty-padding =

[module/cwindow]
# cwindow is clean window title.
# It strips any of your credentials.
type = custom/script

interval = 3
format = <label>
exec = "cwindow"


[module/cpu]
type = internal/cpu
interval = 2
format-prefix = " "
format-prefix-foreground = ${colors.foreground-alt}
format-underline = #f90000
label = %percentage:2%%

[module/memory]
type = internal/memory
interval = 2
format-prefix = " "
format-prefix-foreground = ${colors.foreground-alt}
format-underline = #4bffdc
label = %percentage_used%%

[module/battery]
type = internal/battery
full-at = 98
battery = BAT0
adapter = ACAD
poll-interval = 60
format-charging = <ramp-capacity>  <label-charging>
label-charging =  %percentage%%
label-full = Full
format-discharging = <ramp-capacity>  <label-discharging>
label-discharging = %percentage%%
ramp-capacity-0 = 
ramp-capacity-1 = 
ramp-capacity-2 = 
ramp-capacity-3 = 
ramp-capacity-4 = 
ramp-capacity-foreground = ${colors.accent}

[module/date]
type = internal/date
interval = 30
label = " %date% %time%"
date =
date-alt = %a %Y-%m-%d %H:%M
time = %I:%M %p
time-alt =
format-prefix = 
format-prefix-foreground = ${colors.accent}

# wait until `internal` supported in ipc module
# https://github.com/polybar/polybar/issues/1127
# [module/status]
# type = custom/ipc
# interval = 1  # in second
# hook-0 = date +'%a %Y-%m-%d %I:%M %p'
# hook-1 = "while true; do date +'%a %Y-%m-%d %H:%M'; sleep 1; done"
# hook-2 = hostname
# initial = 1
# click-left = polybar-msg -p %pid% hook status 1
# click-right = polybar-msg -p %pid% hook status 2
# double-click-left = polybar-msg -p %pid% hook status 3
# format-prefix = " "
# format-prefix-foreground = ${colors.accent}